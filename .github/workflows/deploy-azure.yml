name: Deploy NASA Space App to Azure

on:
  push:
    branches: [ "main", "master" ]
    paths:
      - 'WebApp/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ "main", "master" ]
    paths:
      - 'WebApp/**'
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: nasa-space-app
  AZURE_WEBAPP_PACKAGE_PATH: './WebApp'
  NODE_VERSION: '20'

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./WebApp
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'pnpm'
        cache-dependency-path: './WebApp/pnpm-lock.yaml'

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Lint code
      run: pnpm run lint

    - name: Build application
      run: pnpm run build
      env:
        # Add any build-time environment variables here
        NEXT_TELEMETRY_DISABLED: 1

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp-build
        path: |
          ./WebApp/.next/
          ./WebApp/out/
          ./WebApp/public/
          ./WebApp/package.json
          ./WebApp/next.config.mjs

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-azure.outputs.webapp-url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: webapp-build
        path: ./WebApp

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Install production dependencies
      working-directory: ./WebApp
      run: |
        npm ci --only=production

    - name: Deploy to Azure Web App
      id: deploy-to-azure
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  # Alternative deployment using Azure Static Web Apps
  deploy-static:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    environment:
      name: 'static-production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: webapp-build
        path: ./WebApp

    - name: Deploy to Azure Static Web Apps
      uses: Azure/static-web-apps-deploy@v1
      with:
        azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        action: "upload"
        app_location: "./WebApp"
        output_location: "out"
        skip_app_build: true